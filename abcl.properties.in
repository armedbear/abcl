# XXX should be called 'build.properties' but this collides with its
#     usage by the Eclipse IDE

# Template for Ant based build process settings.

# Copy to 'abcl.properties' to set options to local builds.

# Attempt to perform incremental compilation? 
abcl.build.incremental=true

# Additional site specific startup code to be merged in 'system.lisp' at build time
#abcl.startup.file=${basedir}/startup.lisp

## java.options sets the Java options in the abcl wrapper scripts

# Base JVM settings that work on all supported platforms
java.options=-XshowSettings:vm -Dfile.encoding=UTF-8

# Java 11 
#java.options= 

# Maximum safe performance on JDK8
#java.options=-d64  -XX:+UseG1GC -XshowSettings:vm -Dfile.encoding=UTF-8 -XX:+AggressiveOpts -XX:CompileThreshold=10

# Reasonable defaults for Java 8
#java.options=-d64 -XshowSettings:vm -XX:+UseG1GC 

# Java7 on 64bit optimizations
#java.options=-d64 -XshowSettings:vm -XX:+UseG1GC 

# Reasonable defaults for openjdk6
#java.options=-d64 -XshowSettings:vm -XX:+CMSClassUnloadingEnabled -XX:MaxPermSize=1g -XX:+UseConcMarkSweepGC

# See
# http://www.oracle.com/technetwork/java/javase/tech/vmoptions-jsp-140102.html
# for options for the Oracle HotSpot JVM.

# Java7 on 64bit optimizations
#java.options=-d64 -Xmx16g -XX:+CMSClassUnloadingEnabled -XX:MaxPermSize=2g

# Set the JVM to use a maximum of 1GB of RAM (only works for 64bit JVMs)
#java.options=-d64 -Xmx1g

# Use the G1 garbage collector stablized with jdk1.7.0_04, printing GC details
#java.options=-d64 -Xmx4g -XX:+PrintGCDetails -XX:+UseG1GC 

# Use a separate concurrent GC thread (java-1.6_14 or later)
#java.options=-d64 -Xmx8g -XX:+UseConcMarkSweepGC

# Java 5 era (???) flag to GC class definitions
#java.options=-XX:+CMSPermGenSweepingEnabled

# The unloading of class definitions is a per jvm policy.  For those
# implementations which run out of permgen space, the following should
# help things out.
#java.options=-d64 -XX:+CMSClassUnloadingEnabled -XX:MaxPermSize=1g

# Enable assertions specified via the JVM contract
# TODO move all use of org.armedbear.lisp.Debug assertions to this interface.
#java.options=-ea

## ABCL Development

# skips the compilation of Lisp sources in Netbeans 
# (for debugging compiler-pass1.lisp and subsequent passes)
#abcl.compile.lisp.skip=true

# JVM option to execute when debugging the Lisp compilation via 'abcl.compile.lisp.debug'
# Debug the compilation by connecting a JVM debugger to localhost:6789 via JDWP.
#abcl.compile.lisp.debug.jvmarg=-agentlib:jdwp=transport=dt_socket,server=y,address=6789,suspend=y



